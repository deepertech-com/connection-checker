!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/home/xoxefdp/WORKSPACE/PROJECTS/CONNECTION_CHECKER/connection-checker/dist",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);let o=null,r=null;const c=e=>{o=e};class i{constructor(){this.networkState=null,this.checkerInterval=null}onNetworkChecking(){return new Event("onNetworkChecking")}onNetworkChanged(e){return new CustomEvent("onNetworkChanged",{detail:e})}onNetworkConnected(){return new Event("onNetworkConnected")}onNetworkDisconnected(){return new Event("onNetworkDisconnected")}_checkNetwork(){return this._dispatchNetworkChecking(),new Promise((e,t)=>{fetch("https://google.com",{method:"HEAD",mode:"cors",timeout:2e3}).then(n=>{n.ok?e(this._evaluateNetwork("CONNECTED")):t(this._evaluateNetwork("DISCONNECTED"))}).catch(()=>{t(this._evaluateNetwork("DISCONNECTED"))})})}_getNetworkState(){return this.networkState}_setNetworkState(e){this.networkState=e}_resetState(){this._setNetworkState(null)}_hasNetworkChanged(e){return this._getNetworkState()!==e}_evaluateNetwork(e){this._hasNetworkChanged(e)&&this._dispatchNetworkChanged(e)}_dispatchNetworkChecking(){window.dispatchEvent(this.onNetworkChecking())}_dispatchNetworkChanged(e){window.dispatchEvent(this.onNetworkChanged({from:this._getNetworkState(),to:e})),"CONNECTED"===e?this._dispatchNetworkConnected():this._dispatchNetworkDisconnected()}_dispatchNetworkConnected(){this._setNetworkState("CONNECTED"),c(this._getNetworkState()),window.dispatchEvent(this.onNetworkConnected())}_dispatchNetworkDisconnected(){this._setNetworkState("DISCONNECTED"),c(this._getNetworkState()),window.dispatchEvent(this.onNetworkDisconnected())}_isCheckerActive(){return!!this.checkerInterval}_startConnectionChecker(){this._isCheckerActive()||(this.checkerInterval=setInterval(()=>{this._checkNetwork()},1e4))}_stopConnectionChecker(){this._isCheckerActive()&&(clearInterval(this.checkerInterval),this._resetState())}_checkConnectionOnDemand(){return this._checkNetwork()}}const s=()=>!!r;exports.ConnectionState={CONNECTED:"CONNECTED",DISCONNECTED:"DISCONNECTED"},exports.ConnectionEvent={ON_NETWORK_CHECKING:"onNetworkChecking",ON_NETWORK_CHANGED:"onNetworkChanged",ON_NETWORK_CONNECTED:"onNetworkConnected",ON_NETWORK_DISCONNECTED:"onNetworkDisconnected"},exports.networkState=()=>o,exports.isCheckerActive=s,exports.startConnectionChecker=()=>{s()||(c(null),r=new i,r._startConnectionChecker())},exports.stopConnectionChecker=()=>{s()&&(r._stopConnectionChecker(),r=null)},exports.checkConnectionOnDemand=()=>{let e=new i;e._checkConnectionOnDemand().finally(()=>{e=null})}}]);